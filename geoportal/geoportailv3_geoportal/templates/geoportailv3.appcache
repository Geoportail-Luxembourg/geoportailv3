CACHE MANIFEST

<%
  settings = request.registry.settings
  import os
  import glob
  fonts = os.listdir('/app/geoportailv3_geoportal/static-ngeo/fonts/')
  webfonts = os.listdir('/app/geoportailv3_geoportal/static-ngeo/webfonts/')
  import time
  main_js = glob.glob('/app/geoportailv3_geoportal/static-ngeo/build/main.*.js')[0]
  # main_js_url = 'geoportailv3_geoportal:static-ngeo/build/' + os.path.basename(main_js)
  main_js_url = '/static-ngeo/UNUSED_CACHE_VERSION/build/' + os.path.basename(main_js)
  main_css = glob.glob('/app/geoportailv3_geoportal/static-ngeo/build/main.*.css')[0]
  # main_css_url = 'geoportailv3_geoportal:static-ngeo/build/' + os.path.basename(main_css)
  main_css_url = '/static-ngeo/UNUSED_CACHE_VERSION/build/' + os.path.basename(main_css)
  gov_light = glob.glob('/app/geoportailv3_geoportal/static-ngeo/build/gov-light.*.png')[0]
  gov_light_url = '/static-ngeo/UNUSED_CACHE_VERSION/build/' + os.path.basename(gov_light)
  ttfs = glob.glob('/app/geoportailv3_geoportal/static-ngeo/build/*.ttf')
  eots = glob.glob('/app/geoportailv3_geoportal/static-ngeo/build/*.eot')
  woffs = glob.glob('/app/geoportailv3_geoportal/static-ngeo/build/*.woff')
  built_stuffs_urls = ['/static-ngeo/UNUSED_CACHE_VERSION/build/' + os.path.basename(stuff) for stuff in ttfs + eots + woffs]
%>

% if 'skip_appcache' in settings:
# Dev mode: prevent caching on a 10s basis ${int(time.time()) / 10}
% endif

CACHE:

/dynamic.js?interface=main
/getuserinfo
${main_js_url}
${main_css_url}
${gov_light_url}
${request.static_url('geoportailv3_geoportal:static-ngeo/images/arrow.png')}
% for stuff_url in built_stuffs_urls:
${stuff_url}
% endfor

% for lang in ['fr', 'en', 'lb', 'de']:
${request.static_url('geoportailv3_geoportal:static-ngeo/build/' + lang + '.json')}
% endfor
% for font in fonts:
${request.static_url('geoportailv3_geoportal:static-ngeo/fonts/' + font)}
% endfor
% for webfont in webfonts:
${request.static_url('geoportailv3_geoportal:static-ngeo/webfonts/' + webfont)}
% endfor

NETWORK:
*

FALLBACK:
/theme/main /theme/main
/themes ${request.route_url('themes', _query={'version': '2', 'background': 'background', 'interface': 'desktop', 'catalogue': 'true', 'min_levels': '1'})}
${request.route_url('mymaps_getallcategories')} ${request.route_url('mymaps_getallcategories')}
/predefined_wms /predefined_wms
