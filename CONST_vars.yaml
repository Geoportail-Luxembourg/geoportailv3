vars:
    # project instance id
    instanceid: override_me
    # the Unix user under which the modwsgi daemon processes are executed,
    # can be overriden in development-specific buildout config files
    modwsgi_user: www-data
    # url-path where the instance must respond.
    apache-entry-point: /{instanceid}/
    # cookie session secret
    authtkt_secret: __import__('uuid').uuid4().hex
    # database user
    dbuser: www-data
    # database password
    dbpassword: www-data
    # database host
    dbhost: localhost
    # database port
    dbport: 5432
    # database name
    db: override_me
    # sqlalchemy schema
    schema: webapp
    # database parent schema
    parent_schema: ""
    # apache/mapserver.conf "Allow" statement
    mapserv_allow: Allow from 127.0.0.1
    # mapserver connexion string
    mapserver_connection: user={dbuser} password={dbpassword} dbname={db} host={dbhost}
    # mapserver join tables
    mapserver_join_tables: '{schema}.restrictionarea AS ra, {schema}.role_restrictionarea AS rra, {schema}.layer_restrictionarea AS lra, {schema}.treeitem AS la'
    # mapserver visible area
    mapserver_join_area: ra.area
    # mapserver join close
    mapserver_join_where: 'rra.role_id: %role_id% AND rra.restrictionarea_id: ra.id AND lra.restrictionarea_id: ra.id AND lra.layer_id: la.id AND la.name:'
    # mapserver metadata for validation
    mapserver_layer_metadata:
    mapserver_layer_validation:
        '"default_role_id" "-1"
        "role_id" "^-?[0-9]*$"'
    # mapfile data subselect
    mapfile_data_subselect: 'SELECT ST_Collect(ra.area) FROM main.restrictionarea AS ra, main.role_restrictionarea AS rra, main.layer_restrictionarea AS lra, main.treeitem AS la WHERE rra.role_id: %role_id% AND rra.restrictionarea_id: ra.id AND lra.restrictionarea_id: ra.id AND lra.layer_id: la.id AND la.name:'
    # mapserver filter on role id only
    mapfile_data_noarea_subselect: 'SELECT rra.role_id FROM {mapserver_join_tables} WHERE rra.restrictionarea_id: ra.id AND lra.restrictionarea_id: ra.id AND lra.layer_id: la.id AND la.name:'
    # print path
    print_path: /print-c2cgeoportal-{instanceid}/pdf/
    # port for the waitress web server
    waitress_port: 5000
    # password change replication activation
    enable_auth_replication: false
    # database connection for auth replication
    dbhost_replication: to_be_defined
    dbport_replication: to_be_defined
    db_replication: to_be_defined
    dbuser_replication: to_be_defined
    dbpassword_replication: to_be_defined

    directory: __import__('os').getcwd()
    PYTHONPATH: __import__('distutils').sysconfig.get_python_lib()

interpreted:
  python:
    - authtkt_secret
    - directory
    - PYTHONPATH
